{
  "_args": [
    [
      {
        "raw": "truffle-contract-schema@^2.0.1",
        "scope": null,
        "escapedName": "truffle-contract-schema",
        "name": "truffle-contract-schema",
        "rawSpec": "^2.0.1",
        "spec": ">=2.0.1 <3.0.0",
        "type": "range"
      },
      "C:\\Projects\\Lightlabs\\Property\\node_modules\\truffle-contract"
    ]
  ],
  "_from": "truffle-contract-schema@^2.0.1",
  "_hasShrinkwrap": false,
  "_id": "truffle-contract-schema@2.0.1",
  "_location": "/truffle-contract-schema",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/truffle-contract-schema_2.0.1_1529523736307_0.8986241435117783"
  },
  "_npmUser": {
    "name": "gnidan",
    "email": "nick@gnidan.org"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "truffle-contract-schema@^2.0.1",
    "scope": null,
    "escapedName": "truffle-contract-schema",
    "name": "truffle-contract-schema",
    "rawSpec": "^2.0.1",
    "spec": ">=2.0.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/truffle-contract"
  ],
  "_resolved": "https://registry.npmjs.org/truffle-contract-schema/-/truffle-contract-schema-2.0.1.tgz",
  "_shasum": "9bf821d32e26e674ba15eb5d40f96b10b1c9d568",
  "_shrinkwrap": null,
  "_spec": "truffle-contract-schema@^2.0.1",
  "_where": "C:\\Projects\\Lightlabs\\Property\\node_modules\\truffle-contract",
  "author": {
    "name": "Tim Coulter",
    "email": "tim.coulter@consensys.net"
  },
  "bugs": {
    "url": "https://github.com/trufflesuite/truffle-schema/issues"
  },
  "dependencies": {
    "ajv": "^5.1.1",
    "crypto-js": "^3.1.9-1",
    "debug": "^3.1.0"
  },
  "description": "JSON schema for contract artifacts",
  "devDependencies": {
    "mocha": "5.2.0",
    "solc": "0.4.24"
  },
  "directories": {},
  "dist": {
    "shasum": "9bf821d32e26e674ba15eb5d40f96b10b1c9d568",
    "tarball": "https://registry.npmjs.org/truffle-contract-schema/-/truffle-contract-schema-2.0.1.tgz",
    "fileCount": 16,
    "unpackedSize": 75049
  },
  "homepage": "https://github.com/trufflesuite/truffle-schema#readme",
  "keywords": [
    "ethereum",
    "json",
    "schema",
    "contract",
    "artifacts"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "benjamincburns",
      "email": "benjamin.c.burns@gmail.com"
    },
    {
      "name": "cgewecke",
      "email": "christophergewecke@gmail.com"
    },
    {
      "name": "gnidan",
      "email": "nick@gnidan.org"
    },
    {
      "name": "tcoulter",
      "email": "tim@timothyjcoulter.com"
    }
  ],
  "name": "truffle-contract-schema",
  "optionalDependencies": {},
  "readme": "# Schema Description: Truffle Contract Object\n\n| type | _object_ |\n| ---: | ---- |\n| JSON Schema | [contract-object.spec.json](spec/contract-object.spec.json) |\n\n\n[truffle-contract](https://github.com/trufflesuite/truffle-contract) uses a\nformally specified<sup>[1](#footnote-1)</sup> JSON object format to represent\nEthereum Virtual Machine (EVM) smart contracts. This representation is intended\nto facilitate the use of general purpose smart contract abstractions\n(such as truffle-contract) by capturing relevant smart contract information in a\npersistent and portable manner.\n\nObjects following this schema represent individual smart contracts as defined\nby their name and interface. Each object primarily includes a JSON array\nrepresenting the contract's ABI<sup>[2](#footnote-2)</sup>, but extends to\ninclude any and all information related to the contract and its lifecycle(s).\nObjects in this schema may represent pre-compiled source code, compilation\nannotations such as source mappings, references to specified deployed instances\non multiple networks, and/or links to external contracts.\n\nA full property listing is below. Properties not marked \"**required**\" are not\nnecessary to include in valid descriptions of contract objects, but functionally\ncertain information must be present to allow the contract object representation\nto be useful (`source`/`bytecode`/etc. enable the deployment of new instances,\n`networks` listed with prior contract instance `address`es enable interaction\nwith deployed contracts on-chain)\n\n\n## References\n\n<a name=\"footnote-1\">1.</a> JSON Schema [http://json-schema.org](http://json-schema.org/)\n\n<a name=\"footnote-2\">2.</a> Ethereum Contract JSON ABI [https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI#json](https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI#json)\n\n\n\n## Properties\n\n\n### `contractName`\n\n| type | _string_ matching pattern `^[a-zA-Z_][a-zA-Z0-9_]*$` |\n| ---: | ---- |\n| default | `\"Contract\"` |\n\n\nName used to identify the contract. Semi-alphanumeric string.\n\n\n### `abi`\n\n| type | _array_ |\n| ---: | ---- |\n| JSON Schema | [abi.spec.json](spec/abi.spec.json) |\n| **required** |\n\nExternal programmatic description of contract's interface. The contract's ABI\ndetermines the means by which applications may interact with individual contract\ninstances. Array of functions and events representing valid inputs and outputs\nfor the instance.\n\n\n### `ast`\n\n| type | _object_ |\n| ---: | ---- |\n\n_not included in current version of this specification_\n\nAbstract Syntax Tree. A nested JSON object representation of contract source\ncode, as output by compiler.\n\n\n\n### `bytecode`\n\n| type | _string_ matching pattern `^0x0$\\|^0x([a-fA-F0-9]{2}\\|__.{38})+$` |\n| ---: | ---- |\n| ref | [Bytecode](#contract-object--bytecode) |\n\n\nEVM instruction bytecode that runs as part of contract create transaction.\nConstructor code for new contract instance.\nSpecified as a hexadecimal string, may include `__`-prefixed (double underscore)\nlink references.\n\n\n\n### `deployedBytecode`\n\n| type | _string_ matching pattern `^0x0$\\|^0x([a-fA-F0-9]{2}\\|__.{38})+$` |\n| ---: | ---- |\n| ref | [Bytecode](#contract-object--bytecode) |\n\n\nEVM instruction bytecode associated with contract that specifies behavior for\nincoming transactions/messages. Underlying implementation of ABI.\nSpecified as a hexadecimal string, may include `__`-prefixed (double underscore)\nlink references.\n\n\n### `source`\n\n| type | _string_ |\n| ---: | ---- |\n\n\nUncompiled source code for contract. Text string.\n\n\n### `sourcePath`\n\n| type | _string_ |\n| ---: | ---- |\n\nFile path for uncompiled source code.\n\n\n### `sourceMap`\n\n| type | _string_ matching pattern `^[0-9;]*` |\n| ---: | ---- |\n\n\nSource mapping for `bytecode`, pairing contract creation transaction data bytes\nwith origin statements in uncompiled `source`.\n\n\n### `deployedSourceMap`\n\n| type | _string_ matching pattern `^[0-9;]*` |\n| ---: | ---- |\n\nSource mapping for `deployedBytecode`, pairing contract program data bytes\nwith origin statements in uncompiled `source`.\n\n\n### `schemaVersion`\n\n| type | _string_ matching pattern `[0-9]+\\.[0-9]+\\.[0-9]+` |\n| ---: | ---- |\n\nVersion of this schema used by contract object representation.\n\n\n\n### `updatedAt`\n\n| type | _string_ |\n| ---: | ---- |\n| format | IS0-8601 Datetime |\n\n\nTime at which contract object representation was generated/most recently\nupdated.\n\n\n### `networks`\n\n| type | _object_ |\n| ---: | ---- |\n\nListing of contract instances. Object mapping network ID keys to network object\nvalues. Includes address information, links to other contract instances, and/or\ncontract event logs.\n\n#### Properties (key matching `^[a-zA-Z0-9]+$`)\n\n| type | _object_ |\n| ---: | ---- |\n| ref | [Network Object](network-object.spec.md) |\n\n\n## Custom Properties\n\n### `^x-([a-zA-Z]+-)*[a-zA-Z]+`\n\n| type | _string or number or object or array_ |\n| ---: | ---- |\n\nObjects following this schema may include additional properties with\n`x-`-prefixed keys.\n\n\n\n## Definitions\n\n\n\n\n### <a name=\"contract-object--bytecode\">Bytecode</a>\n\n| type | _string_ matching pattern `^0x0$\\|^0x([a-fA-F0-9]{2}\\|__.{38})+$` |\n| ---: | ---- |\n\n`0x`-prefixed string representing compiled EVM machine language.\n\nThis string representation may indicate link references in place of\nlinked instance addresses. Link references must begin with `__` and be exactly\n40 characters long (i.e., string length of an address in hexadecimal).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/trufflesuite/truffle-schema.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "2.0.1"
}
